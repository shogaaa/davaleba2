// Task 1 :
// ანა არის 28 წლის , ხოლო მისი ძმა ლევანი 21ის .

// გამოიყენეთ ცვლადები , რომელშიც შეინახავთ თითოეულის ასაკს და სახელს.
// განსაზღვრეთ ახალი სტრინგ ტიპის ცვლადი რომელიც შეინახასვს ტექსტს :
// 'ანა ლევანზე 7 წლით უფროსია'
// სხვაობა დათვალეთ დინამიურად ცვლადების და არითმეტიკული ოპერატორების გამოყენებით
// დალოგეთ ზემოაღნიშნული ცვლადი .


let anasAge = 28 
let levanisAge = 21
let gamotvla = anasAge - levanisAge 
console.log(gamotvla)



/*
  Task 2 : 
      გვაქვს სტუდენტების სახელების მასივი ['John','Sam','Ann','Will','Andrew','Joseph','Lorelai','Amelie','Den']
      დალოგეთ სიის ზუსტად შუაში მყოფი სახელი.

*/

let studentsNames = ['John','Sam','Ann','Will','Andrew','Joseph','Lorelai','Amelie','Den'];

console.log(studentsNames [4]);

/*
  Task 3 : 
  Part 1 : შექმენით სტუდენტის ობიექტი , რომელსაც აქვს 5 property : firstName; lastName; age; subjects; roommate;
  firstname,lastname - string type
  age - number
  subject - object (array of strings)
  roommate - object (რომელსაც აქვს თავის მხრივ ორი property : fullname , age )

  მნიშვნელობები მიანიჭეთ ტიპების მიხედვით . subject- მასივი უნდა შედგებოდეს არანაკლებ 5 ელემენტისგან

  Part 2 : 
      for ციკლის გამოყენებით დალოგეთ თუ რა საგნებს სწავლობს სტუდენტი , subject arrayს ელემენტები.

      ასევე შექმენით ახალი ცვლადი fullName რომელშიც შეინახავთ სტუდენტის სრულ სახელ და გვარს.

      ეს fullName მნიშვნელობასთან ერთად დაამატეთ სტუდენტის ობიექტს. 
       
      დაამატეთ ცვლადი result რომლის მნიშვნელობაც იქნება წინადადება : 
          ' (სტუდენტის სახელი და გვარი) არის age წლის და მისი რუმმეითი არის : roommate fullname
      

*/
let student = {
  firstname: "შოთა",
  lastname: "კალანდარიშვილი",
  age: 16,
  subjects:["matematika", "geografia", "qartuli", "fizika", "istoria"],
  roommate: {
      fullname: "John Doe",
      age: 70
  }
}

for(let allsubjects of student.subjects){
  console.log(allsubjects);
};

let fullName = student.firstname + " " + student.lastname;
student.fullName = fullName;

let aboutStudent = `${student.fullName} არის ${student.age} წლის და მისი რუმმეითი არის ${student.roommate.fullname}`;
console.log(aboutStudent);
/*
  Task 4 : 
      გვაქვს  მასივი : ["Banana", "Orange", "Apple", "Mango",2,12]
      გამოიყენეთ while ციკლი და მანამ სანამ მასივის ელემენტის ტიპი არის სტრინგი
      დალოგეთ ეს ელემენტი.

*/

let arr = ["Banana", "Orange", "Apple", "Mango",2,12];
let i = 0;

while(typeof arr[i] == "string"){
  console.log(mixedArr[i]);
  i++;
}

/*
  Task 5 : 
  გვაქვს მასივი : [12,23,43,11,9,2,121,90]
  თუ მასივის ელემენტი მეტია 31ზე და თან არის ლუწი მაშინ დალოგეთ : 'Element is greater than provided value and is EVEN'
  თუ მასივის ელემენტი ნაკლებია 31ზე და თან არის კენტი მაშინ დალოგეთ : 'Element is less than provided value and is ODD'

*/

let numbersArr = [12,23,43,11,9,2,121,90];

for(i = 0; i < numbersArr.length; i++){
  if(numbersArr[i] > 31 && numbersArr[i] % 2 == 0){
      console.log(`${numbersArr[i]} is geater than provided value and is EVEN`);
  }else if(numbersArr[i] < 31 && numbersArr[i] % 2 == 1){
      console.log(`${numbersArr[i]} is less than provided value and is ODD`);
  }
}




//part 2

//Task 1
/*
  შექმენით ფუნქცია რომელსაც აქვს ერთი პარამეტრი . 
  ფუნქციას გადაეცით ობიექტი არგუმეტნად 
  
  let sampleObject = {
      isItarable : false,
      sampleArray : [12,63,21,34,98,57]
  }
  თუ მიღებული არგუმენტის isItarable მნიშვნელობა არის ჭეშმარიტი მაშინ დალოგეთ თითოეული ელემენტი
  თუ არ არის ჭეშმარიტი გამოიტანეთ წინადადება "provided array isn't itarable"

*/
let sampleObject = {
  isItarable : false,
  sampleArray : [12,63,21,34,98,57]
}


function checkItarable(obj){
  if(obj.isItarable){
      for(let el of obj.sampleArray){
          console.log(el);
      }
  }else{
      return "provided array isn't itarable"
  }
}

console.log(checkItarable(sampleObject));


//Task 2
/*
  შექმენით ფუნქცია checkPythagoras რომელიც მიიღებს სამ პარამეტრს x,y,z .
  ფუნქციამ უნდა შეამოწმოს თუ აღნიშნული რიცხვების რომელიმე კომბინაცია მაინც
  აკმაყოფილებს პითაგორას თეორემის პირობას a^2 + b^2 = c^2;
  თუ კი ეს პირობა დაკმაყოფილდა ფუნქციამ უნდა დააბრუნოს true 
  წინააღმდეგ შემთხვევაში false
  
*/

//vergavige

//Task 3
/*
  დაწერეთ ფუნქცია minMax რომელიც იღებს 1 მასივის ტიპის პარამეტრს 
  და დააბრუნებს მასივის ელემენტებს შორის მაქსიმალურს და მინიმალურს ელემენტს .
  მაგ : [2,14,25,75,11,6] თუ კი ამ მასივს გადავცემთ არგუმენტის სახით ფუნქციამ უნდა
  დააბრუნოს "Min value is 2 and Max value is 75"
*/

const justArr = [2,14,25,75,11,6];

function minMax (arr){
  let minValue = arr[0];
  let maxValue = 0;
  for(i = 0; i < arr.length; i++){
      if(arr[i] <= minValue){
          minValue = arr[i];
      }else if(arr[i] >= maxValue){
          maxValue = arr[i];
      }
  }
  return `Min value is ${minValue} and Max value is ${maxValue}`;
}

console.log(minMax(justArr));

//Task 4

/*
დაწერეთ ფუნქცია რომელმაც გადაცემული კუთხის მნიშვნელობით უნდა დააბრუნოს
თუ რა ტიპის კუთხეა . 
კუთხის სახეები:
Acute angle: An angle between 0 and 90 degrees.
Right angle: An 90 degree angle.
Obtuse angle: An angle between 90 and 180 degrees.
Straight angle: A 180 degree angle.

*/
//vergavige

//Task 5
/*
  დაწერეთ ფუნქცია checkStudentGrade რომელიც მიიღებს ობიექტების მასივს. 
  მაგალითად [{name: student1; grade : 91}, {name: student2; grade : 71}, {name: student3; grade : 45} ]
  ფუნქციამ სტუდენტის ქულის მიხედვით უნდა განსაზღვროს საფინალო შედეგი finalResult 
  ქვემოთ არსებული ცხრილის მიხედვით და ელემენტის ობიექტში დაამატოს propertyს სახით
  მიღებული მასივი დააბრუნებინეთ ფუნქციას .

  0-50 = F
  51-60 = E
  61-70 = D
  71-80 = C
  81-100 = A

  საორიენტაციოდ შედეგი აღნიშNული მაგალითის მიხედვით უნდა იყოს
  [{name: student1; grade : 91 ; finalResult : 'A'}, {name: student2; grade : 71,finalResult : 'C'}, {name: student3; grade : 45, finalResult : 'F'} ]

//vergavige
*/
